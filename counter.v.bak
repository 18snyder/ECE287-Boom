module test2(clk, rst, en, count, segment, led1, led2, led3, led4, led5);
input clk, rst;
input en;
output reg [8:0] count;
reg [25:0] altcount;
output [6:0] segment;
output reg led1;
output reg led2;
output reg led3;
output reg led4;
output reg led5;
Display (count[3], count[2], count[1], count[0], segment[0], segment[1], segment[2], segment[3], segment[4], segment[5], segment[6]);


always@(posedge clk or negedge rst)
	begin
		if (rst == 1'b0)
			begin
				count <= 9'd0;
				altcount <= 4'd0;
				led1 <= 1'b0;
				led2 <= 1'b1;
				led3 <= 1'b1;
				led4 <= 1'b1;
				led5 <= 1'b1;
			end
		else if (en == 1'b1)
			begin
				count <= 9'd0;
				altcount <= 4'd0;
			end

		else
			begin
				altcount <= altcount + 26'd1;
				if (altcount == 26'd50_000_000)
					begin
						count = count + 9'd1;
						if(count >= 9'd60)
							begin
								led1 <= 1'b0;
							end
						else 
							begin
								led1 <= 1'b1; 
							end
							//----------
						if(count >= 9'd120)
							begin
								led2 <= 1'b0;
							end
						else 
							begin
								led2 <= 1'b1;
							end
							//----------
							if(count >= 9'd180)
							begin
								led3 <= 1'b0;
							end
						else 
							begin
								led3 <= 1'b1;
							end
							//----------
							if(count >= 9'd240)
							begin
								led4 <= 1'b0;
							end
						else 
							begin
								led4 <= 1'b1;
							end
							//----------
							if(count >= 9'd300)
							begin
								led5 <= 1'b0;
							end
						else 
							begin
								led5 <= 1'b1;
							end
							//----------
					end

			end
		
end
endmodule 